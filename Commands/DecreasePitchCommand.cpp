// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "DecreasePitchCommand.h"
DecreasePitchCommand::DecreasePitchCommand(float changeRate, float timeout): _timeout(timeout) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::pitch);
	SetTimeout(_timeout);
	_changeRate = changeRate;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void DecreasePitchCommand::Initialize() {
	if(!Robot::pitch->LowerLimitReached())
		Robot::pitch->DecreasePitch(_changeRate);
}
// Called repeatedly when this Command is scheduled to run
void DecreasePitchCommand::Execute() {
	
}
// Make this return true when this Command no longer needs to run execute()
bool DecreasePitchCommand::IsFinished() {
	return Robot::pitch->LowerLimitReached() || (_timeout >= 0.0 ? IsTimedOut() : false);
}
// Called once after isFinished returns true
void DecreasePitchCommand::End() {
	Robot::pitch->Stop();
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DecreasePitchCommand::Interrupted() {
	End();
}
