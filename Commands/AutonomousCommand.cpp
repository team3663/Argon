// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "AutonomousCommand.h"
AutonomousCommand::AutonomousCommand() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        // spin up the shooting wheel
	AddSequential(new SpinUpCommand());
	// give it time to get up to speed
	AddSequential(new WaitCommand(2.5));
	// shoot three times (assume they all work)
	for (int i = 0; i < 3; i++)
	{
		AddSequential(new ShootPistonCommand());
		// wait a bit for the wheel to get back to speed
		AddSequential(new WaitCommand(0.5));
	}
	// turn off shooter wheel
	AddSequential(new SpinDownCommand());
	// turn toward side wall
	AddSequential(new TurnDegreesCommand(-25));
	// drive to a distance from the wall
	AddSequential(new DriveToPointCommand(12, 0));
	// turn to face feeder (need FRONT facing feeder)
	AddSequential(new TurnDegreesCommand(90));
}
// Called just before this Command runs the first time
void AutonomousCommand::Initialize() {

}
// Called repeatedly when this Command is scheduled to run
void AutonomousCommand::Execute() {
	
}
// Make this return true when this Command no longer needs to run execute()
bool AutonomousCommand::IsFinished() {
	return false;
}
// Called once after isFinished returns true
void AutonomousCommand::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousCommand::Interrupted() {
}
